name: Commit Message Check

on:
  push:  # Runs on every push to all branches
  pull_request:  # Runs on all pull requests

jobs:
  check-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensure full commit history is available

      - name: Run Commit Message Check
        run: |
          # Determine commit range based on event type
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            COMMIT_RANGE="${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}"
          else
            if [ "${{ github.event.before }}" == "0000000000000000000000000000000000000000" ]; then
              COMMIT_RANGE="${{ github.event.after }}"  # First commit case
            else
              COMMIT_RANGE="${{ github.event.before }}..${{ github.event.after }}"
            fi
          fi

          echo "Checking commit range: $COMMIT_RANGE"

          # Get commit messages within the determined range
          COMMIT_MSGS=$(git log --format=%B --no-merges $COMMIT_RANGE)

          # Check each commit message
          echo "Checking commit messages..."
          echo "$COMMIT_MSGS" | while IFS= read -r commit_msg; do
            commit_msg=$(echo "$commit_msg" | tr -d '\n' | sed 's/ *$//')  # Clean up message

            # Skip empty lines
            if [[ -z "$commit_msg" ]]; then
              continue
            fi

            # Skip merge commits
            if [[ "$commit_msg" == Merge* ]]; then
              echo "✅ Skipping merge commit: $commit_msg"
              continue
            fi

            # Validate commit message format
            if ! echo "$commit_msg" | grep -qE "^(feat|chore):\s[A-Z].+"; then
              echo "❌ ERROR: Invalid commit message format!"
              echo "Commit message: \"$commit_msg\""
              echo "Commit messages must start with \"feat\" or \"chore\" and follow this format:"
              echo "   Example: feat: Add new feature"
              echo "   Example: chore: Update dependencies"
              exit 1
            fi

            echo "✅ Commit message format is correct: \"$commit_msg\""
          done
